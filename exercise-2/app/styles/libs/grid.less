// Grid System
.grid {
  .grid-fixed();
  @media (min-width: @screen-sm-min) {
    width: @grid-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @grid-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @grid-lg;
  }
}
.grid-fluid {
  .grid-fixed();
}
.row {
  .make-row();
}
.make-grid-columns();
.make-grid(xs);
@media (min-width: @screen-sm-min) {
  .make-grid(sm);
}
@media (min-width: @screen-md-min) {
  .make-grid(md);
}
@media (min-width: @screen-lg-min) {
  .make-grid(lg);
}
.visible-xs,
.visible-sm,
.visible-sm-up,
.visible-md,
.visible-md-up,
.visible-lg {
  display: none !important;
}
.visible-xs {
  @media (max-width: @screen-xs-max) {
    .responsive-visibility();
  }
}
.visible-sm {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    .responsive-visibility();
  }
}
.visible-sm-up {
  @media (min-width: @screen-sm-min) {
    .responsive-visibility();
  }
}
.visible-md {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .responsive-visibility();
  }
}
.visible-md-up {
  @media (min-width: @screen-md-min) {
    .responsive-visibility();
  }
}
.visible-lg {
  @media (min-width: @screen-lg-min) {
    .responsive-visibility();
  }
}
.hidden-xs {
  @media (max-width: @screen-xs-max) {
    .responsive-invisibility();
  }
}
.hidden-sm {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    .responsive-invisibility();
  }
}
.hidden-sm-up {
  @media (min-width: @screen-sm-min) {
    .responsive-invisibility();
  }
}
.hidden-md {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .responsive-invisibility();
  }
}
.hidden-md-up {
  @media (min-width: @screen-md-min) {
    .responsive-invisibility();
  }
}
.hidden-lg {
  @media (min-width: @screen-lg-min) {
    .responsive-invisibility();
  }
}
